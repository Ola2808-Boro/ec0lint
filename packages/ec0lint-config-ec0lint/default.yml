reportUnusedDisableDirectives: true
extends:
    - "ec0lint:recommended"

rules:
    no-floating-decimal: "error"
    no-implied-eval: "error"
    no-invalid-this: "error"
    no-iterator: "error"
    no-label-var: "error"
    no-labels: "error"
    no-lone-blocks: "error"
    no-loop-func: "error"
    no-mixed-spaces-and-tabs: ["error", false] # Modified from recommended
    no-multi-spaces: "error"
    no-multi-str: "error"
    no-multiple-empty-lines: ["error", {max: 2, maxBOF: 0, maxEOF: 0}]
    no-nested-ternary: "error"
    no-new: "error"
    no-new-func: "error"
    no-new-object: "error"
    no-new-wrappers: "error"
    no-octal-escape: "error"
    no-param-reassign: "error"
    no-proto: "error"
    no-process-exit: "off"
    no-restricted-properties: [
        "error",
        { property: "substring", message: "Use .slice instead of .substring." },
        { property: "substr", message: "Use .slice instead of .substr." },
        { object: "assert", property: "equal", message: "Use assert.strictEqual instead of assert.equal." },
        { object: "assert", property: "notEqual", message: "Use assert.notStrictEqual instead of assert.notEqual." },
        { object: "assert", property: "deepEqual", message: "Use assert.deepStrictEqual instead of assert.deepEqual." },
        { object: "assert", property: "notDeepEqual", message: "Use assert.notDeepStrictEqual instead of assert.notDeepEqual." }
    ]
    no-return-assign: "error"
    no-script-url: "error"
    no-self-compare: "error"
    no-sequences: "error"
    no-shadow: "error"
    no-tabs: "error"
    no-throw-literal: "error"
    no-trailing-spaces: "error"
    no-undef: ["error", {typeof: true}] # Modified from recommended
    no-undef-init: "error"
    no-undefined: "error"
    no-underscore-dangle: ["error", {allowAfterThis: true}]
    no-unmodified-loop-condition: "error"
    no-unneeded-ternary: "error"
    no-unreachable-loop: "error"
    no-unused-expressions: "error"
    no-unused-vars: ["error", {vars: "all", args: "after-used", caughtErrors: "all"}] # Modified from recommended
    no-use-before-define: "error"
    no-useless-call: "error"
    no-useless-computed-key: "error"
    no-useless-concat: "error"
    no-useless-constructor: "error"
    no-useless-rename: "error"
    no-useless-return: "error"
    no-whitespace-before-property: "error"
    no-var: "error"

    object-curly-newline: ["error", { "consistent": true, "multiline": true }]
    object-curly-spacing: ["error", "always"]
    object-property-newline: ["error", { "allowAllPropertiesOnSameLine": true }]
    object-shorthand: "error"
    one-var-declaration-per-line: "error"
    operator-assignment: "error"
    operator-linebreak: "error"
    prefer-arrow-callback: "error"
    prefer-const: "error"
    prefer-exponentiation-operator: "error"
    prefer-numeric-literals: "error"
    prefer-promise-reject-errors: "error"
    prefer-regex-literals: "error"
    prefer-rest-params: "error"
    prefer-spread: "error"
    prefer-template: "error"
    quotes: ["error", "double", {avoidEscape: true}]
    quote-props: ["error", "as-needed"]
    radix: "error"
    require-unicode-regexp: "error"
    rest-spread-spacing: "error"
    semi: "error"
    semi-spacing: ["error", {before: false, after: true}]
    semi-style: "error"
    space-before-blocks: "error"
    space-in-parens: "error"
    space-infix-ops: "error"
    space-unary-ops: ["error", {words: true, nonwords: false}]
    spaced-comment: ["error", "always", { exceptions: ["-"]}]
    strict: ["error", "global"]
    switch-colon-spacing: "error"
    symbol-description: "error"
    template-curly-spacing: ["error", "never"]
    template-tag-spacing: "error"
    unicode-bom: "error"
    wrap-iife: "error"
    yield-star-spacing: "error"
    yoda: ["error", "never", { exceptRange: true }]
